# 使用阿里云镜像源的Node.js镜像
FROM registry.cn-hangzhou.aliyuncs.com/library/node:18-alpine AS backend

# 设置npm镜像源
RUN npm config set registry https://registry.npmmirror.com

WORKDIR /app

# 复制package文件
COPY package*.json ./

# 安装依赖
RUN npm ci --only=production

# 复制源代码
COPY server.js ./
COPY data/ ./data/

# 前端构建阶段 - 使用阿里云nginx镜像
FROM registry.cn-hangzhou.aliyuncs.com/library/nginx:alpine AS frontend

# 复制静态文件
COPY public/ /usr/share/nginx/html/

# 复制自定义nginx配置
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf

# 创建SSL证书目录
RUN mkdir -p /etc/nginx/ssl

# 创建上传文件目录
RUN mkdir -p /usr/share/nginx/html/uploads

# 设置权限
RUN chmod -R 755 /usr/share/nginx/html

# 最终阶段 - 使用阿里云Node.js镜像
FROM registry.cn-hangzhou.aliyuncs.com/library/node:18-alpine

# 更换apk源为阿里云镜像
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# 安装nginx
RUN apk add --no-cache nginx

# 复制后端文件
WORKDIR /app
COPY --from=backend /app ./

# 复制前端文件
COPY --from=frontend /usr/share/nginx/html /usr/share/nginx/html
COPY --from=frontend /etc/nginx/nginx.conf /etc/nginx/nginx.conf

# 复制启动脚本
COPY docker/start.sh /start.sh
RUN chmod +x /start.sh

# 创建必要目录
RUN mkdir -p /etc/nginx/ssl
RUN mkdir -p /var/log/nginx
RUN mkdir -p /var/run
RUN mkdir -p /usr/share/nginx/html/uploads

# 暴露端口
EXPOSE 80 443

# 启动服务
CMD ["/start.sh"]